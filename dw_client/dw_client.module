<?php

/**
 * @file
 *   Drupal Watchtower client module. Provides watchtower-reporting
 *   functionality.
 */

/**
 * Default minimal period of time in seconds between reports executed by cron.
 */
define('WATCHTOWER_DEFAULT_REPORT_THRESHOLD', 10800);

/**
 * Implements hook_menu().
 */
function dw_client_menu() {
  $items = array();
  $items['admin/config/system/watchtower_client'] = array(
    'title' => 'Drupal Watchtower Client settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dw_client_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'dw_client.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_hook_info().
 */
function dw_client_hook_info() {
  $hooks['dw_metric'] = array(
    'group' => 'metric',
  );
  return $hooks;
}

/**
 * Implements hook_cron().
 */
function dw_client_cron() {
  _dw_client_report();
}

/**
 * Implements hook_modules_enabled().
 */
function dw_client_modules_enabled($modules) {
  if (variable_get('watchtower_on_modules_events', FALSE)) {
    _dw_client_report(TRUE);
  }
}

/**
 * Implements hook_modules_disabled().
 */
function dw_client_modules_disabled($modules) {
  if (variable_get('watchtower_on_modules_events', FALSE)) {
    _dw_client_report(TRUE);
  }
}

/**
 * Sends state report to watchtower server.
 *
 * @param bool $force
 *   Do not check the last report time.
 *
 * @return bool
 *   Is result successful.
 */
function _dw_client_report($force = FALSE) {
  if ($watchtower = variable_get('watchtower_server', FALSE)) {
    $time = time();
    if ($force || ($time - variable_get('watchtower_last_report', 0) >= variable_get('watchtower_report_threshold', WATCHTOWER_DEFAULT_REPORT_THRESHOLD))) {
      // Load needed code.
      module_load_include('inc', 'dw_client', 'dw_client.drush');

      $result = xmlrpc($watchtower, array(
        'drupal_watchtower.report' => array(_dw_client_get_default_report()),
      ));

      if (!$result) {
        watchdog('dw_client', xmlrpc_error_msg(), array(), WATCHDOG_ERROR);
      }
      else {
        variable_set('watchtower_last_report', $time);
        variable_set('watchtower_instance_info_url', $result);
      }
    }
  }
  return !empty($result);
}
